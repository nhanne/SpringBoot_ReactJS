package com.clothings.springBoot.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class ProductExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public ProductExample() {
		oredCriteria = new ArrayList<>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andIdIsNull() {
			addCriterion("Id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("Id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Integer value) {
			addCriterion("Id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Integer value) {
			addCriterion("Id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Integer value) {
			addCriterion("Id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Integer value) {
			addCriterion("Id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Integer value) {
			addCriterion("Id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Integer value) {
			addCriterion("Id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Integer> values) {
			addCriterion("Id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Integer> values) {
			addCriterion("Id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Integer value1, Integer value2) {
			addCriterion("Id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Integer value1, Integer value2) {
			addCriterion("Id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andCategoryidIsNull() {
			addCriterion("CategoryId is null");
			return (Criteria) this;
		}

		public Criteria andCategoryidIsNotNull() {
			addCriterion("CategoryId is not null");
			return (Criteria) this;
		}

		public Criteria andCategoryidEqualTo(Integer value) {
			addCriterion("CategoryId =", value, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidNotEqualTo(Integer value) {
			addCriterion("CategoryId <>", value, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidGreaterThan(Integer value) {
			addCriterion("CategoryId >", value, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidGreaterThanOrEqualTo(Integer value) {
			addCriterion("CategoryId >=", value, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidLessThan(Integer value) {
			addCriterion("CategoryId <", value, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidLessThanOrEqualTo(Integer value) {
			addCriterion("CategoryId <=", value, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidIn(List<Integer> values) {
			addCriterion("CategoryId in", values, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidNotIn(List<Integer> values) {
			addCriterion("CategoryId not in", values, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidBetween(Integer value1, Integer value2) {
			addCriterion("CategoryId between", value1, value2, "categoryid");
			return (Criteria) this;
		}

		public Criteria andCategoryidNotBetween(Integer value1, Integer value2) {
			addCriterion("CategoryId not between", value1, value2, "categoryid");
			return (Criteria) this;
		}

		public Criteria andPictureIsNull() {
			addCriterion("Picture is null");
			return (Criteria) this;
		}

		public Criteria andPictureIsNotNull() {
			addCriterion("Picture is not null");
			return (Criteria) this;
		}

		public Criteria andPictureEqualTo(String value) {
			addCriterion("Picture =", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureNotEqualTo(String value) {
			addCriterion("Picture <>", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureGreaterThan(String value) {
			addCriterion("Picture >", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureGreaterThanOrEqualTo(String value) {
			addCriterion("Picture >=", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureLessThan(String value) {
			addCriterion("Picture <", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureLessThanOrEqualTo(String value) {
			addCriterion("Picture <=", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureLike(String value) {
			addCriterion("Picture like", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureNotLike(String value) {
			addCriterion("Picture not like", value, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureIn(List<String> values) {
			addCriterion("Picture in", values, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureNotIn(List<String> values) {
			addCriterion("Picture not in", values, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureBetween(String value1, String value2) {
			addCriterion("Picture between", value1, value2, "picture");
			return (Criteria) this;
		}

		public Criteria andPictureNotBetween(String value1, String value2) {
			addCriterion("Picture not between", value1, value2, "picture");
			return (Criteria) this;
		}

		public Criteria andNameIsNull() {
			addCriterion("Name is null");
			return (Criteria) this;
		}

		public Criteria andNameIsNotNull() {
			addCriterion("Name is not null");
			return (Criteria) this;
		}

		public Criteria andNameEqualTo(String value) {
			addCriterion("Name =", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotEqualTo(String value) {
			addCriterion("Name <>", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThan(String value) {
			addCriterion("Name >", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameGreaterThanOrEqualTo(String value) {
			addCriterion("Name >=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThan(String value) {
			addCriterion("Name <", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLessThanOrEqualTo(String value) {
			addCriterion("Name <=", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameLike(String value) {
			addCriterion("Name like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotLike(String value) {
			addCriterion("Name not like", value, "name");
			return (Criteria) this;
		}

		public Criteria andNameIn(List<String> values) {
			addCriterion("Name in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotIn(List<String> values) {
			addCriterion("Name not in", values, "name");
			return (Criteria) this;
		}

		public Criteria andNameBetween(String value1, String value2) {
			addCriterion("Name between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andNameNotBetween(String value1, String value2) {
			addCriterion("Name not between", value1, value2, "name");
			return (Criteria) this;
		}

		public Criteria andCodeIsNull() {
			addCriterion("Code is null");
			return (Criteria) this;
		}

		public Criteria andCodeIsNotNull() {
			addCriterion("Code is not null");
			return (Criteria) this;
		}

		public Criteria andCodeEqualTo(String value) {
			addCriterion("Code =", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotEqualTo(String value) {
			addCriterion("Code <>", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThan(String value) {
			addCriterion("Code >", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeGreaterThanOrEqualTo(String value) {
			addCriterion("Code >=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThan(String value) {
			addCriterion("Code <", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLessThanOrEqualTo(String value) {
			addCriterion("Code <=", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeLike(String value) {
			addCriterion("Code like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotLike(String value) {
			addCriterion("Code not like", value, "code");
			return (Criteria) this;
		}

		public Criteria andCodeIn(List<String> values) {
			addCriterion("Code in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotIn(List<String> values) {
			addCriterion("Code not in", values, "code");
			return (Criteria) this;
		}

		public Criteria andCodeBetween(String value1, String value2) {
			addCriterion("Code between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCodeNotBetween(String value1, String value2) {
			addCriterion("Code not between", value1, value2, "code");
			return (Criteria) this;
		}

		public Criteria andCostpriceIsNull() {
			addCriterion("costPrice is null");
			return (Criteria) this;
		}

		public Criteria andCostpriceIsNotNull() {
			addCriterion("costPrice is not null");
			return (Criteria) this;
		}

		public Criteria andCostpriceEqualTo(Float value) {
			addCriterion("costPrice =", value, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceNotEqualTo(Float value) {
			addCriterion("costPrice <>", value, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceGreaterThan(Float value) {
			addCriterion("costPrice >", value, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceGreaterThanOrEqualTo(Float value) {
			addCriterion("costPrice >=", value, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceLessThan(Float value) {
			addCriterion("costPrice <", value, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceLessThanOrEqualTo(Float value) {
			addCriterion("costPrice <=", value, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceIn(List<Float> values) {
			addCriterion("costPrice in", values, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceNotIn(List<Float> values) {
			addCriterion("costPrice not in", values, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceBetween(Float value1, Float value2) {
			addCriterion("costPrice between", value1, value2, "costprice");
			return (Criteria) this;
		}

		public Criteria andCostpriceNotBetween(Float value1, Float value2) {
			addCriterion("costPrice not between", value1, value2, "costprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceIsNull() {
			addCriterion("unitPrice is null");
			return (Criteria) this;
		}

		public Criteria andUnitpriceIsNotNull() {
			addCriterion("unitPrice is not null");
			return (Criteria) this;
		}

		public Criteria andUnitpriceEqualTo(Float value) {
			addCriterion("unitPrice =", value, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceNotEqualTo(Float value) {
			addCriterion("unitPrice <>", value, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceGreaterThan(Float value) {
			addCriterion("unitPrice >", value, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceGreaterThanOrEqualTo(Float value) {
			addCriterion("unitPrice >=", value, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceLessThan(Float value) {
			addCriterion("unitPrice <", value, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceLessThanOrEqualTo(Float value) {
			addCriterion("unitPrice <=", value, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceIn(List<Float> values) {
			addCriterion("unitPrice in", values, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceNotIn(List<Float> values) {
			addCriterion("unitPrice not in", values, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceBetween(Float value1, Float value2) {
			addCriterion("unitPrice between", value1, value2, "unitprice");
			return (Criteria) this;
		}

		public Criteria andUnitpriceNotBetween(Float value1, Float value2) {
			addCriterion("unitPrice not between", value1, value2, "unitprice");
			return (Criteria) this;
		}

		public Criteria andSoldIsNull() {
			addCriterion("Sold is null");
			return (Criteria) this;
		}

		public Criteria andSoldIsNotNull() {
			addCriterion("Sold is not null");
			return (Criteria) this;
		}

		public Criteria andSoldEqualTo(Integer value) {
			addCriterion("Sold =", value, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldNotEqualTo(Integer value) {
			addCriterion("Sold <>", value, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldGreaterThan(Integer value) {
			addCriterion("Sold >", value, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldGreaterThanOrEqualTo(Integer value) {
			addCriterion("Sold >=", value, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldLessThan(Integer value) {
			addCriterion("Sold <", value, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldLessThanOrEqualTo(Integer value) {
			addCriterion("Sold <=", value, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldIn(List<Integer> values) {
			addCriterion("Sold in", values, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldNotIn(List<Integer> values) {
			addCriterion("Sold not in", values, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldBetween(Integer value1, Integer value2) {
			addCriterion("Sold between", value1, value2, "sold");
			return (Criteria) this;
		}

		public Criteria andSoldNotBetween(Integer value1, Integer value2) {
			addCriterion("Sold not between", value1, value2, "sold");
			return (Criteria) this;
		}

		public Criteria andSaleIsNull() {
			addCriterion("Sale is null");
			return (Criteria) this;
		}

		public Criteria andSaleIsNotNull() {
			addCriterion("Sale is not null");
			return (Criteria) this;
		}

		public Criteria andSaleEqualTo(Integer value) {
			addCriterion("Sale =", value, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleNotEqualTo(Integer value) {
			addCriterion("Sale <>", value, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleGreaterThan(Integer value) {
			addCriterion("Sale >", value, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleGreaterThanOrEqualTo(Integer value) {
			addCriterion("Sale >=", value, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleLessThan(Integer value) {
			addCriterion("Sale <", value, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleLessThanOrEqualTo(Integer value) {
			addCriterion("Sale <=", value, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleIn(List<Integer> values) {
			addCriterion("Sale in", values, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleNotIn(List<Integer> values) {
			addCriterion("Sale not in", values, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleBetween(Integer value1, Integer value2) {
			addCriterion("Sale between", value1, value2, "sale");
			return (Criteria) this;
		}

		public Criteria andSaleNotBetween(Integer value1, Integer value2) {
			addCriterion("Sale not between", value1, value2, "sale");
			return (Criteria) this;
		}

		public Criteria andStockindateIsNull() {
			addCriterion("stockInDate is null");
			return (Criteria) this;
		}

		public Criteria andStockindateIsNotNull() {
			addCriterion("stockInDate is not null");
			return (Criteria) this;
		}

		public Criteria andStockindateEqualTo(Date value) {
			addCriterionForJDBCDate("stockInDate =", value, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateNotEqualTo(Date value) {
			addCriterionForJDBCDate("stockInDate <>", value, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateGreaterThan(Date value) {
			addCriterionForJDBCDate("stockInDate >", value, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("stockInDate >=", value, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateLessThan(Date value) {
			addCriterionForJDBCDate("stockInDate <", value, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("stockInDate <=", value, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateIn(List<Date> values) {
			addCriterionForJDBCDate("stockInDate in", values, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateNotIn(List<Date> values) {
			addCriterionForJDBCDate("stockInDate not in", values, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("stockInDate between", value1, value2, "stockindate");
			return (Criteria) this;
		}

		public Criteria andStockindateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("stockInDate not between", value1, value2, "stockindate");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table product
	 * @mbg.generated  Tue Oct 03 17:58:08 ICT 2023
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table product
     *
     * @mbg.generated do_not_delete_during_merge Tue Oct 03 17:40:39 ICT 2023
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }
}